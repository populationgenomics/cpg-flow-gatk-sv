[workflow]
name = 'gatk_sv'

gatk_sv_commit = '890582922bccb4b651275506a34311c949417f6c'
sequencing_type = 'genome'

check_expected_outputs = true

min_batch_size = 10

ref_fasta = 'gs://cpg-common-main/references/hg38/v0/dragen_reference/Homo_sapiens_assembly38_masked.fasta'

status_reporter = 'metamist'
time_limit_seconds = 86400  # 24 hrs max runtime

# this relates to the number of intervals which will be generated by TrainGCNV
model_tar_count = 290

# update this when cpg_workflows.scripts.get_gencode_gtf.sh is re-run
gencode_gtf_file = 'gs://cpg-common-main/references/hg38/v0/gencode_47.gtf.gz'

# Use this option to run only a subset of jobs in the GatherSampleEvidence workflow
# [workflow.GatherSampleEvidence]
# only_jobs = ['coverage_counts', 'pesr', 'scramble', 'wham', 'manta']

[references]
ref_panel_bincov_matrix = "gs://cpg-common-main/references/hg38/v0/sv-resources/ref-panel/1KG/v1/merged_evidence/ref_panel_1kg_v1.bincov.bed.gz"

strvctvre_phylop = 'gs://cpg-common-main/references/hg38.phyloP100way.bw'
primary_contigs_fai = "gs://cpg-common-main/references/hg38/v0/sv-resources/resources/v1/contig.fai"
primary_contigs_list = "gs://cpg-common-main/references/hg38/v0/sv-resources/resources/v1/primary_contigs.list"

# This model is trained on the All Of Us dataset. If this is used in any published work,
# credit must be given in accordance with the AoU publication policy.
# Access to this file was provided on a one-off basis, and is not publicly available.
# If an updated model is required, contact Mark Walker at the Broad Institute
aou_filtering_model = 'gs://cpg-common-main/references/gatk-sv/gatk-sv-recalibrator.aou_phase_1.v1.model'

# used in MakeCohortVcf
clustering_track_sr = "gs://cpg-common-main/references/gatk-sv/hg38/v0/sv-resources/resources/v1/hg38.SimpRep.sorted.pad_100.merged.bed"
clustering_track_sd = "gs://cpg-common-main/references/gatk-sv/hg38/v0/sv-resources/resources/v1/hg38.SegDup.sorted.merged.bed"
clustering_track_rm = "gs://cpg-common-main/references/gatk-sv/hg38/v0/sv-resources/resources/v1/hg38.RM.sorted.merged.bed"
clustering_track_names = ["SR", "SD", "RM"]

external_af_population=['ALL', 'AFR', 'AMR', 'EAS', 'EUR', 'MID', 'FIN', 'ASJ', 'RMI', 'SAS', 'AMI']
external_af_ref_bed_prefix='gnomad_v4.1_sv'

gnomad_sv = "gs://cpg-common-main/references/gnomad_v4_SV.Freq.tsv.gz"
noncoding_bed = 'gs://cpg-common-main/references/gatk-sv/hg38/v0/sv-resources/resources/v1/noncoding.sort.hg38.bed'

protein_coding_gtf = "gs://cpg-common-main/references/gatk-sv/hg38/v0/sv-resources/resources/v1/MANE.GRCh38.v1.2.ensembl_genomic.gtf"

wgd_scoring_mask = "gs://cpg-common-main/references/hg38/v0/sv-resources/resources/v1/wgd_scoring_mask.hg38.gnomad_v3.bed"

# genome tracks are a list of CPG config keys
genome_tracks = [
    'recalibrate_gq_repeatmasker',
    'recalibrate_gq_segmental_dups',
    'recalibrate_gq_simple_reps',
    'recalibrate_gq_umap_s100',
    'recalibrate_gq_umap_s24',
]
genome_tracks_index = [
    'recalibrate_gq_repeatmasker_index',
    'recalibrate_gq_segmental_dups_index',
    'recalibrate_gq_simple_reps_index',
    'recalibrate_gq_umap_s100_index',
    'recalibrate_gq_umap_s24_index',
]

bin_exclude = "gs://cpg-common-main/references/gatk-sv/hg38/v0/sv-resources/resources/v1/bin_exclude.hg38.gatkcov.bed.gz"
depth_exclude_list = "gs://cpg-common-main/references/gatk-sv/hg38/v0/sv-resources/resources/v1/depth_blacklist.sorted.bed.gz"
pesr_exclude_list = "gs://cpg-common-main/references/gatk-sv/hg38/v0/sv-resources/resources/v1/PESR.encode.peri_all.repeats.delly.hg38.blacklist.sorted.bed.gz"
seed_cutoffs = "gs://cpg-common-main/references/gatk-sv/hg38/v0/sv-resources/resources/v1/seed_cutoff.txt"

clustering_config_part1 = "gs://cpg-common-main/references/gatk-sv/hg38/v0/sv-resources/resources/v1/clustering_config.part_one.tsv"
clustering_config_part2 = "gs://cpg-common-main/references/gatk-sv/hg38/v0/sv-resources/resources/v1/clustering_config.part_two.tsv"
stratification_config_part1 = "gs://cpg-common-main/references/gatk-sv/hg38/v0/sv-resources/resources/v1/stratify_config.part_one.tsv"
stratification_config_part2 = "gs://cpg-common-main/references/gatk-sv/hg38/v0/sv-resources/resources/v1/stratify_config.part_two.tsv"
hervk_reference = "gs://cpg-common-main/references/gatk-sv/hg38/v0/sv-resources/resources/v1/HERVK.sorted.bed.gz"
line1_reference = "gs://cpg-common-main/references/gatk-sv/hg38/v0/sv-resources/resources/v1/LINE1.sorted.bed.gz"

recalibrate_gq_args = [
    '--keep-homvar false',
    '--keep-homref true',
    '--keep-multiallelic true',
    '--skip-genotype-filtering true',
    '--min-samples-to-estimate-allele-frequency -1',
]

sl_filter_args = '--small-del-threshold 93 --medium-del-threshold 100 --small-dup-threshold -51 --medium-dup-threshold -4 --ins-threshold -13 --inv-threshold -19'

# FilterGenotypes - stringent end of [0.3, 0.5] range
fmax_beta = 0.3

mei_bed = "gs://cpg-common-main/references/hg38/v0/sv-resources/resources/v1/mei_hg38.bed.gz"
cytobands = "gs://cpg-common-main/references/hg38/v0/sv-resources/resources/v1/cytobands_hg38.bed.gz"
genome_file = "gs://cpg-common-main/references/hg38/v0/sv-resources/resources/v1/hg38.genome"

dbsnp_vcf = "gs://cpg-common-main/references/hg38/v0/Homo_sapiens_assembly38.dbsnp138.vcf"
dbsnp_vcf_index = "gs://cpg-common-main/references/hg38/v0/Homo_sapiens_assembly38.dbsnp138.vcf.idx"

allosomal_contigs = "gs://cpg-common-main/references/hg38/v0/sv-resources/resources/v1/allosome.fai"
inclusion_bed = "gs://cpg-common-main/references/hg38/v0/sv-resources/resources/v1/hg38_primary_contigs.bed"
autosome_file = "gs://cpg-common-main/references/hg38/v0/sv-resources/resources/v1/autosome.fai"
allosome_file = "gs://cpg-common-main/references/hg38/v0/sv-resources/resources/v1/allosome.fai"
cnmops_exclude_list = "gs://cpg-common-main/references/hg38/v0/sv-resources/resources/v1/GRCh38_Nmask.bed"

ped_file = "gs://cpg-common-main/references/hg38/v0/sv-resources/ref-panel/1KG/v1/ped/1kg_ref_panel_v1.ped"

model_tar_tmpl = "gs://cpg-common-main/references/gatk-sv/hg38/v0/sv-resources/ref-panel/1KG/v2/gcnv/model_files/ref_panel_1kg_v2-gcnv-model-shard-{shard}.tar.gz"
ref_panel_PE_file_tmpl = "gs://cpg-common-main/references/gatk-sv/hg38/v0/sv-resources/ref-panel/tws_SVEvidence/pe/{sample}.pe.txt.gz"
ref_panel_SR_file_tmpl = "gs://cpg-common-main/references/gatk-sv/hg38/v0/sv-resources/ref-panel/tws_SVEvidence/sr/{sample}.sr.txt.gz"
ref_panel_SD_file_tmpl = "gs://cpg-common-main/references/gatk-sv/hg38/v0/sv-resources/ref-panel/tws_SVEvidence/sd/{sample}.sd.txt.gz"

liftover_38_to_37 = "gs://cpg-common-main/references/liftover/grch38_to_grch37.over.chain.gz"

contig_ploidy_priors = "gs://cpg-common-main/references/gatk-sv/hg38/v0/sv-resources/resources/v1/hg38.contig_ploidy_priors_homo_sapiens.tsv"

preprocessed_intervals = "gs://cpg-common-main/references/gatk-sv/hg38/v0/sv-resources/resources/v1/preprocessed_intervals.interval_list"

manta_region_bed = "gs://cpg-common-main/references/hg38/v0/sv-resources/resources/v1/primary_contigs_plus_mito.bed.gz"
manta_region_bed_index = "gs://cpg-common-main/references/hg38/v0/sv-resources/resources/v1/primary_contigs_plus_mito.bed.gz.tbi"
wham_include_list_bed_file = "gs://cpg-common-main/references/hg38/v0/sv-resources/resources/v1/wham_whitelist.bed"

rmsk = "gs://cpg-common-main/references/gatk-sv/hg38/v0/sv-resources/resources/v1/hg38.randomForest_blacklist.withRepMask.bed.gz"
segdups = "gs://cpg-common-main/references/gatk-sv/hg38/v0/sv-resources/resources/v1/hg38.SD_gaps_Cen_Tel_Heter_Satellite_lumpy.blacklist.sorted.merged.bed.gz"

# these workflows take a VCF result from a GatherSampleEvidence stage, and optionally a baseline VCF
# from the same caller, and runs a VCFMetrics comparison of the two
# we don't have like-for-like baselines for any of our samples (AFAIK), and the workflows don't allow
# us to recover these results
[resource_overrides.GatherSampleEvidence]
run_module_metrics = false

[images]
bcftools = "australia-southeast1-docker.pkg.dev/cpg-common/images/bcftools:1.20-2"
cloud_sdk_docker = "australia-southeast1-docker.pkg.dev/cpg-common/images/sv/cloud-sdk"
cnmops_docker = "australia-southeast1-docker.pkg.dev/cpg-common/images/sv/cnmops:2024-11-08-v1.0-62adb329"
condense_counts_docker = "australia-southeast1-docker.pkg.dev/cpg-common/images/sv/gatk:4.2.6.1-57-g9e03432"
denovo = "australia-southeast1-docker.pkg.dev/cpg-common/images/sv/denovo:2025-06-27-v1.0.4-63e6c81e"
gatk_docker = "australia-southeast1-docker.pkg.dev/cpg-common/images/sv/gatk:2025-05-20-4.6.2.0-4-g1facd911e-NIGHTLY-SNAPSHOT"
gatk_docker_pesr_override = "australia-southeast1-docker.pkg.dev/cpg-common/images/sv/gatk:4.2.6.1-57-g9e03432"
genomes_in_the_cloud_docker = "australia-southeast1-docker.pkg.dev/cpg-common/images/sv/genomes-in-the-cloud:2.3.2-1510681135"
gq_recalibrator_docker = "australia-southeast1-docker.pkg.dev/cpg-common/images/sv/gatk:mw-tb-form-sv-filter-training-data-899360a"
linux_docker = "australia-southeast1-docker.pkg.dev/cpg-common/images/sv/ubuntu1804"
#manta_docker = "australia-southeast1-docker.pkg.dev/cpg-common/images/sv/manta:2023-09-14-v0.28.3-beta-3f22f94d"
manta_docker = "australia-southeast1-docker.pkg.dev/cpg-common/images/manta_no_rrr_for_ins:1.6.0-1"
samtools_cloud_docker = "australia-southeast1-docker.pkg.dev/cpg-common/images/sv/samtools-cloud:2024-10-25-v0.29-beta-5ea22a52"
scramble_docker = "australia-southeast1-docker.pkg.dev/cpg-common/images/sv/scramble:2024-10-25-v0.29-beta-5ea22a52"
str = "australia-southeast1-docker.pkg.dev/cpg-common/images/sv/str:2023-05-23-v0.27.3-beta-e537bdd6"
sv_base_docker = "australia-southeast1-docker.pkg.dev/cpg-common/images/sv/sv-base:2024-10-25-v0.29-beta-5ea22a52"
sv_base_mini_docker = "australia-southeast1-docker.pkg.dev/cpg-common/images/sv/sv-base-mini:2024-10-25-v0.29-beta-5ea22a52"
sv_pipeline_docker = "australia-southeast1-docker.pkg.dev/cpg-common/images/sv/sv-pipeline:2025-06-27-v1.0.4-63e6c81e"
sv_pipeline_qc_docker = "australia-southeast1-docker.pkg.dev/cpg-common/images/sv/sv-pipeline:2025-06-27-v1.0.4-63e6c81e"
wham_docker = "australia-southeast1-docker.pkg.dev/cpg-common/images/sv/wham:2024-10-25-v0.29-beta-5ea22a52"
strvctvre = "australia-southeast1-docker.pkg.dev/cpg-common/images/strvctvre:v.1.10"

[sv_ref_panel]
ref_panel_samples = ['HG00096', 'HG00129', 'HG00140', 'HG00150', 'HG00187', 'HG00239', 'HG00277', 'HG00288', 'HG00337', 'HG00349', 'HG00375', 'HG00410', 'HG00457', 'HG00557', 'HG00599', 'HG00625', 'HG00701', 'HG00740', 'HG00844', 'HG01060', 'HG01085', 'HG01112', 'HG01275', 'HG01325', 'HG01344', 'HG01356', 'HG01384', 'HG01393', 'HG01396', 'HG01474', 'HG01507', 'HG01572', 'HG01607', 'HG01709', 'HG01747', 'HG01790', 'HG01794', 'HG01799', 'HG01861', 'HG01874', 'HG01880', 'HG01885', 'HG01958', 'HG01982', 'HG02002', 'HG02010', 'HG02019', 'HG02020', 'HG02069', 'HG02085', 'HG02186', 'HG02221', 'HG02235', 'HG02272', 'HG02275', 'HG02299', 'HG02332', 'HG02367', 'HG02374', 'HG02489', 'HG02490', 'HG02491', 'HG02586', 'HG02588', 'HG02611', 'HG02620', 'HG02642', 'HG02648', 'HG02658', 'HG02855', 'HG02953', 'HG03007', 'HG03009', 'HG03085', 'HG03099', 'HG03100', 'HG03111', 'HG03369', 'HG03370', 'HG03436', 'HG03449', 'HG03472', 'HG03476', 'HG03556', 'HG03604', 'HG03649', 'HG03684', 'HG03694', 'HG03709', 'HG03722', 'HG03727', 'HG03744', 'HG03756', 'HG03789', 'HG03850', 'HG03864', 'HG03872', 'HG03888', 'HG04118', 'HG04158', 'HG04161', 'HG04183', 'NA06984', 'NA10847', 'NA11894', 'NA12340', 'NA12489', 'NA12872', 'NA18499', 'NA18507', 'NA18530', 'NA18539', 'NA18549', 'NA18553', 'NA18560', 'NA18638', 'NA18923', 'NA18941', 'NA18945', 'NA18956', 'NA18995', 'NA19001', 'NA19035', 'NA19062', 'NA19102', 'NA19143', 'NA19184', 'NA19350', 'NA19351', 'NA19377', 'NA19443', 'NA19449', 'NA19661', 'NA19678', 'NA19679', 'NA19684', 'NA19746', 'NA19795', 'NA19818', 'NA19913', 'NA20126', 'NA20320', 'NA20321', 'NA20346', 'NA20509', 'NA20510', 'NA20522', 'NA20752', 'NA20764', 'NA20802', 'NA20845', 'NA20869', 'NA20895', 'NA21102', 'NA21122', 'NA21133']

# resource overrides for the GatherSampleEvidence stage
[resource_overrides.GatherSampleEvidence.runtime_attr_scramble_part1]
mem_gb = 7.5
[resource_overrides.GatherSampleEvidence.runtime_attr_wham]
mem_gb = 16
[resource_overrides.GatherSampleEvidence.runtime_attr_scramble_part2]
mem_gb = 16

# resource overrides for the EvidenceQC stage
[resource_overrides.EvidenceQC.wgd_build_runtime_attr]
disk_gb = 40
[resource_overrides.EvidenceQC.runtime_attr_mediancov]
disk_gb = 200

[resource_overrides.GatherBatchEvidence]
run_matrix_qc = false
run_module_metrics = false

[resource_overrides.ClusterBatch]
run_module_metrics = false

[resource_overrides.GenerateBatchMetrics]
run_module_metrics = false

[resource_overrides.FilterBatch]
run_module_metrics = false

[resource_overrides.GenotypeBatch]
run_module_metrics = false
# If we run into silent failures in integrateGQ.sh, modify the number of splits (affecting number of shards)
# this was a temporary fix for an edge case in GATK-SV, which has since been patched
n_per_split = 5001
n_RD_genotype_bins = 100000

[resource_overrides.FilterGenotypes]
run_qc = false

[resource_overrides.MakeCohortVcf]
run_module_metrics = false

[resource_overrides.MakeCohortVcf.runtime_attr_join_vcfs]
mem_gb = 32
disk_gb = 50
cpu = 2

[resource_overrides.MakeCohortVcf.runtime_attr_recluster_part1]
mem_gb = 32
disk_gb = 50
cpu = 2

[resource_overrides.MakeCohortVcf.runtime_attr_recluster_part2]
mem_gb = 32
disk_gb = 50
cpu = 2

[resource_overrides.MakeCohortVcf.runtime_attr_cluster_sites]
mem_gb = 32
disk_gb = 50
cpu = 2

#[hail]
#billing_project = "test-vcgs-dataset"
#delete_scratch_on_exit = true
#dry_run = true
#backend = "local"
